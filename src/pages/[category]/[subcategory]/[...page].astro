---
import BlogCardList from "@components/BlogCardList.astro";
import Pagination from "@components/Pagination.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import type { GetStaticPaths } from "astro";
import { getCollection, getEntry } from "astro:content";

export const getStaticPaths = (async ({ paginate }) => {
  const parentCategories = await getCollection(
    "categories",
    (cat) => cat.data.parent === undefined
  );
  const subCategories = await getCollection(
    "categories",
    (cat) => cat.data.parent
  );
  const entries = await getCollection(
    "posts",
    (post) => post.data.draft !== true
  );
  return subCategories.flatMap((subCategory) => {
    const posts = entries
      .filter((post) =>
        post.data.categories?.some((c) => c.id === subCategory.id)
      )
      .sort((a, b) => b.data.createdAt.valueOf() - a.data.createdAt.valueOf());
    return paginate(posts, {
      params: {
        subcategory: subCategory.id,
        category: parentCategories.find(
          (cat) => cat.id === subCategory.data.parent?.id
        )?.id,
      },
      pageSize: 10,
    });
  });
}) satisfies GetStaticPaths;

const { subcategory: subCategoryId } = Astro.params;
const subCategory = await getEntry("categories", subCategoryId);
const { page } = Astro.props;
---

<BaseLayout
  title={subCategory.data.name}
  description={subCategory.data.description}>
  <main>
    <div
      class="flex flex-col items-center justify-center gap-4 rounded-lg bg-zinc-900 py-12">
      <h1 class="text-4xl font-black uppercase">{subCategory.data.name}</h1>
      <div class="text-sm uppercase tracking-wider">
        {subCategory.data.description}
      </div>
    </div>
    <BlogCardList posts={page.data} />
    <Pagination
      prevUrl={page.url.prev}
      nextUrl={page.url.next}
      currentUrl={page.url.current}
      currentPage={page.currentPage}
      lastPage={page.lastPage}
    />
  </main>
</BaseLayout>
