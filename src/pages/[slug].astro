---
import type { GetStaticPaths } from "astro";
import { getCollection, getEntries, type CollectionEntry } from "astro:content";
import BaseLayout from "@layouts/BaseLayout.astro";
import { Image } from "astro:assets";
import { getEntry } from "astro:content";
import { Icon } from "astro-icon/components";
import StartNow from "@components/StartNow.astro";

export const getStaticPaths = (async () => {
  const entries = await getCollection(
    "posts",
    (post) => post.data.draft !== true
  );
  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}) satisfies GetStaticPaths;

const { entry } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await entry.render();

const author = await getEntry(entry.data.author!);

const categories = await getEntries(entry.data.categories!);
const parentCategories = await getCollection(
  "categories",
  (cat) => cat.data.parentId === 0
);
let allCategories: CollectionEntry<"categories">[] = [];
for (const category of categories) {
  if (category.data.parentId !== 0) {
    const parentCat = parentCategories.find(
      (cat) => cat.data.wpId === category.data.parentId
    );
    if (parentCat) {
      allCategories.push(parentCat);
    }
    allCategories.push(category);
  }
}
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
  <main>
    <div
      class="absolute inset-0 top-[70px] -z-50"
      style={`background: radial-gradient(ellipse at 50% 0%, rgba(32, 8, 140, 0.75) 1%, #09090b 76%), url(${entry.data.featuredMedia?.src.src}); background-size: cover; background-repeat: no-repeat; background-position: center;`}>
    </div>
    <article>
      <div class="grid grid-cols-[auto_auto] place-items-center pb-52 pt-40">
        <div class="flex flex-col gap-4">
          <div>
            <ul class="flex gap-2">
              {
                allCategories.map((cat) => (
                  <li class="flex items-center gap-2 [&:not(:last-child)]:after:content-['-']">
                    <a
                      class="text-sm uppercase text-cyan-500"
                      href={`/category/${cat.data.slug}`}>
                      {cat.data.name}
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
          <h1 class="text-4xl font-black uppercase text-white">
            {entry.data.title}
          </h1>
          <div class="flex items-center gap-4">
            {
              entry.data.featuredMedia && (
                <Image
                  class="size-10 rounded-2xl sm:size-12 md:size-14 lg:size-16"
                  src={author.data.featuredMedia?.src!}
                  alt={author.data.name}
                  height={96}
                  width={96}
                  loading={"eager"}
                />
              )
            }
            <div class="flex items-center gap-1">
              <Icon class="size-5" name="mdi:user" />
              <a
                class="text-sm uppercase tracking-widest text-cyan-500"
                href={`/author/${author.data.slug}`}>{author?.data.name}</a
              >
            </div>
            <div class="flex items-center gap-1">
              <Icon class="size-5" name="mdi:calendar" />
              <time
                class="text-sm uppercase tracking-widest text-zinc-200"
                datetime={new Date(entry.data.createdAt).toISOString()}
                >{
                  new Date(entry.data.createdAt).toLocaleDateString(undefined, {
                    month: "long",
                    day: "numeric",
                    year: "numeric",
                    timeZone: "UTC",
                  })
                }</time
              >
            </div>
            <div class="flex items-center gap-1">
              <Icon class="size-5" name="mdi:clock-time-nine-outline" />
              <span class="text-sm uppercase tracking-widest text-zinc-200"
                >{remarkPluginFrontmatter.minutesRead}</span
              >
            </div>
          </div>
        </div>
        {
          entry.data.featuredMedia && (
            <Image
              class="rounded-xl"
              src={entry.data.featuredMedia?.src}
              alt={entry.data.featuredMedia?.alt || ""}
            />
          )
        }
      </div>
      <div class="-mt-24 grid grid-cols-[minmax(0,_3fr)_minmax(0,_1fr)] gap-8">
        <div
          class="lg:prose-md prose prose-zinc prose-invert w-full max-w-none py-8 prose-a:font-normal prose-a:text-inherit prose-a:decoration-lime-500 prose-a:decoration-2 prose-a:underline-offset-4 hover:prose-a:bg-lime-500 hover:prose-a:text-zinc-900 prose-code:text-pink-500 prose-code:before:content-[''] prose-code:after:content-[''] prose-ol:relative prose-ol:ml-6 prose-ol:list-none prose-ol:pl-6 [&_ol>li]:before:absolute [&_ol>li]:before:-left-3 [&_ol>li]:before:size-7 [&_ol>li]:before:rounded-full [&_ol>li]:before:bg-lime-500 [&_ol>li]:before:text-center [&_ol>li]:before:leading-7 [&_ol>li]:before:text-zinc-950 [&_ol>li]:before:content-[counter(list-item)] [&_ul>li]:marker:text-lime-500">
          <Content />
        </div>
        <aside class="space-y-8">
          <StartNow showLeague={false} />
          <div class="rounded-xl bg-zinc-900">
            <header
              class="rounded-t-xl bg-indigo-600 px-6 py-8 text-sm uppercase tracking-widest text-white">
              In this article
            </header>
            <ul class="flex flex-col gap-1.5 p-4">
              {
                headings.map((heading) => (
                  <li
                    class:list={[
                      "leading-3",
                      { "pl-3": heading.depth === 2 },
                      { "pl-6": heading.depth === 3 },
                      { "pl-9": heading.depth > 3 },
                    ]}>
                    <a
                      class="text-sm text-cyan-500 underline-offset-2 hover:underline"
                      href={`#${heading.slug}`}>
                      {heading.text}
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
        </aside>
      </div>
    </article>
  </main>
</BaseLayout>
