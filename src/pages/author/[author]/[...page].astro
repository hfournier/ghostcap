---
import type { GetStaticPaths } from "astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import { getEntry } from "astro:content";
import CatCard from "@components/CatCard.astro";
import Pagination from "@components/Pagination.astro";

export const getStaticPaths = (async ({ paginate }) => {
  const authors = await getCollection("authors");
  const entries = await getCollection(
    "posts",
    (post) => post.data.draft !== true
  );
  return authors.flatMap((author) => {
    const posts = entries
      .filter((post) => post.data.author?.id === author.id)
      .sort((a, b) => b.data.createdAt.valueOf() - a.data.createdAt.valueOf());
    return paginate(posts, {
      params: { author: author.id },
      pageSize: 10,
    });
  });
}) satisfies GetStaticPaths;

const { author: authorId } = Astro.params;
const author = await getEntry("authors", authorId);
const { page } = Astro.props;
---

<BaseLayout title={author.data.name} description={author.data.description}>
  <main class="">
    <div class="flex items-center gap-8 rounded-xl bg-zinc-900">
      {
        author.data.featuredMedia && (
          <Image
            class="aspect-square max-h-[300px] max-w-fit rounded-xl object-contain"
            src={author.data.featuredMedia?.src!}
            alt={author.data.name}
          />
        )
      }
      <div class="flex flex-col gap-3">
        <h1 class="text-4xl font-black uppercase text-white">
          {author.data.name}
        </h1>
        <div class="">{author.data.description}</div>
        <div class="flex gap-3">
          {
            author.data.social?.facebook && (
              <Icon
                class="size-11 rounded-full bg-indigo-600 p-3 text-white"
                name="fa6-brands:facebook-f"
              />
            )
          }
          {
            author.data.social?.youtube && (
              <Icon
                class="size-11 rounded-full bg-indigo-600 p-3 text-white"
                name="fa6-brands:youtube"
              />
            )
          }
          {
            author.data.social?.twitch && (
              <Icon
                class="size-11 rounded-full bg-indigo-600 p-3 text-white"
                name="fa6-brands:twitch"
              />
            )
          }
          {
            author.data.social?.twitter && (
              <Icon
                class="size-11 rounded-full bg-indigo-600 p-3 text-white"
                name="fa6-brands:x-twitter"
              />
            )
          }
          {
            author.data.social?.discord && (
              <Icon
                class="size-11 rounded-full bg-indigo-600 p-3 text-white"
                name="fa6-brands:discord"
              />
            )
          }
        </div>
      </div>
    </div>
    <section class="py-20">
      <h2
        class="my-6 border-l-[5px] border-indigo-700 py-0 pl-4 font-black uppercase text-white">
        All articles by {author.data.name}
      </h2>
      <ul class="grid grid-cols-2 gap-8 py-4">
        {
          page.data.map((post) => (
            <li>
              <a href={`/${post.slug}`}>
                <CatCard {post} />
              </a>
            </li>
          ))
        }
      </ul>
      <Pagination
        prevUrl={page.url.prev}
        nextUrl={page.url.next}
        currentUrl={page.url.current}
        currentPage={page.currentPage}
        lastPage={page.lastPage}
      />
    </section>
  </main>
</BaseLayout>
