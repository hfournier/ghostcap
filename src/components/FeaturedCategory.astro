---
import { getCollection } from "astro:content";
import CardList from "./CardList.astro";
import Card from "./Card.astro";
import { getEntry } from "astro:content";

type Props = {
  category: string;
  title: string;
  count: number;
  showFeatured?: boolean;
};

const { category, title, count, showFeatured = false } = Astro.props;

const catEntry = await getEntry("categories", category);
const subCatEntries = await getCollection(
  "categories",
  (cat) => cat.data.parent?.id === catEntry?.id
);
const categories = [...subCatEntries, catEntry].map((cat) => cat?.id);

const latestPosts = await getCollection(
  "posts",
  (post) =>
    post.data.draft !== true &&
    post.data.categories?.some((pCat) => categories.includes(pCat.id))
);
const sortedPosts = latestPosts
  .sort((a, b) => b.data.createdAt.valueOf() - a.data.createdAt.valueOf())
  .slice(0, count);
---

<CardList {title} link={`/${category}`}>
  {
    sortedPosts.map((post, i) => (
      <Card {post} featured={i == 0 && showFeatured} />
    ))
  }
</CardList>
